// Local wrapper to ensure loader picks the bundled UMD copy.
(function(){
  try{
    if (typeof window === 'undefined') return;
    // If the full UMD already sets window.reagraph, do nothing
    if (window.reagraph) return;

    // Determine base URL from the current script's src so we load the UMD from the same folder
    var base = null;
    try {
      var cur = document.currentScript;
      if (cur && cur.src) base = cur.src.replace(/\/[^/]*$/, '');
    } catch (e) { base = null; }
    // Fallback: try to derive from a script tag that references presentation/app.js
    if (!base) {
      var scripts = document.getElementsByTagName('script');
      for (var i = scripts.length - 1; i >= 0; i--) {
        var ssrc = scripts[i].src || '';
        if (ssrc.indexOf('/presentation/') !== -1) { base = ssrc.replace(/\/[^/]*$/, ''); break; }
      }
    }
    // Default to './' if we couldn't determine base (last resort)
    if (!base) base = '.';

    var umdUrl = base + '/reagraph.umd.js';
    // Normalize duplicate slashes
    umdUrl = umdUrl.replace(/([^:]\/?)\/+/g, '$1/');

    var s = document.createElement('script');
    s.src = umdUrl;
    s.async = false;
    s.onload = function(){ if (window.reagraph && console && console.info) console.info('Loaded local reagraph UMD from', umdUrl); };
    s.onerror = function(){ if (console && console.warn) console.warn('Failed to load local reagraph UMD at', umdUrl); };
    document.head.appendChild(s);
  }catch(e){ if (console && console.error) console.error('reagraph local wrapper error', e); }
})();
